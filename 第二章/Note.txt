1. 尽管Java是基于C++的，但Java是一种更纯粹的面向对象程序设计(OOP)语言。
2. 一切被视为对象！操作的标识符实际上是对对象的一个 引用
3. New 的意思是 给我一个新对象
4. 对象存储在堆中。（寄存器，堆栈（对象引用存在其中），堆，常量存储，非ARM存储)
5. 基本类型是不用new来创建的 ，而是创建一个并非是引用的自动变量。这个变量直接存储值，并放置在堆栈中。
6. 基本类型 大小-包装器类型:boolean-Boolean,char 16 bits-Character,byte 8 bits-Byte,short 16 bits-Short,int 32 bits-Integer,long 64 bits-Long,float 32 bits-Float,double 64 bits-Double,void-Void 
7. 高精度数字 BigInteger 和BigDecimal
8. 常用注释方式 //和/**/ 文档注释/** */
9.标签实例:
	1.@see classname/@see full-qualified-class/@see fully-fully-qualified-classname#method-name引用其他类 ，加入一个具有超链接的条目
	2.{@link package.class#member label}用于行内 并是用label作为超链接文本
	3.{@docRoot} 该标签产生到文档根目录的相对路径，用于文档树页面的显式超链接
	4.@version version-information 版本信息
	5.@author author-info
	6.{@inheritDoc}从当前这个类最直接的基类中继承相关文档到当前的文档注释中
	7.@since 允许指定程序代码最早使用的版本
	8.@param parameter-name description 残生标识符
	9.@return description 用来描述返回值的含义，可以延续数行
	10.@throws fully-qualified-class-name description 异常
	11.deprecated 指出一些旧特性已由新特性取代 建议用户不要使用这些旧特性 
10. 编码风格 类名大驼峰，其余的小驼峰