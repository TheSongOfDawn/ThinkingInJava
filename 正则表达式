13.6 正则表达式
	概念:一种强大而灵活的文本处理工具使用正则表达式 我们能够以编程的方式构造复杂的文本模式 并对输入的字符串进行搜索，一旦找到了匹配这些模式的部分 你就能
		随心所遇地对它们进行处理
		
13.6.1 基础
	\W 非单词字符
	\w 表示一个单词字符

	对于其他语言，\\表示 我想要在正则表达式中插入一个普通的字面意义上的反斜线 请不要给它任何特殊的意义
	在java中\\的意思是我要插入一个正则表达式的反斜线，所以其后的字符具有特殊的意义。
	所以你想表示一个数字，那么正则表达式应该是 \\d。如果你想要插入一个普通的反斜杠，应该\\\\ 不过换行和制表符之类的东西只需使用单反斜线\n\t
	要表达一个或多个之前的表达式 应该使用+ 
	-?\\d+ 表示可能有一个负号，后面跟着一位或多位数字
	(-|\\+)?\\d+ 可能以一个加号或者减号开头 竖线|表示或操作
	
13.6.2 创建正则表达式
							字符
				B						指定字符B
				\xhh					16进制值为oxhh的字符
				\UHHHH					16进制表示为oxhhhh的Unicaode字符
				\t						制表符tab
				\n						换行符
				\r						回车
				\f						换页
				\e						转义(Escape)
******************************************************************************************
							字 符 类
				*						表示0次或者多次
				.						任意字符
				[abc]					包含abc的任何字符
				[^abc]					除了abc之外的任何字符
				[a-zA-Z]				从a到z或从A-Z的任何字符 范围
				[abc[hij]]				任意abchij字符
				[a-z&&[hij]]			任意h i j 交
				\s						空白符(空格 tab 换行 换页和回车)
				\S						非空白符
				\d						数字
				\D						非数字
				\w						单词字符[a-zA-Z0-9]
				\W						非词字符
****************************************************************************************
逻辑 :
XY y跟在X后面
X|Y X或Y
(X) 捕获组 可以在表达式中用\i引用第i个捕获组

边界匹配符:
^一行的起始 \B 非词的边界
$一行的结束 \G 前一个匹配的结束
\b 词的边界

量词 描述了一个模式吸收输入文本的方式：
贪婪型
勉强型
占有型

? 匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 中的"do" 。? 等价于 {0,1}。
------------8.9日未看完13章----------

				
				
				
				
				
				